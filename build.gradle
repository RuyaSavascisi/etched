plugins {
    id "dev.architectury.loom" version "1.5-SNAPSHOT"
    id "com.github.johnrengelman.shadow" version "8.1.1"
    id "maven-publish"
}

base {
    archivesName = project.archives_base_name
}

version = project.mod_version
group = project.maven_group

loom {
    accessWidenerPath = file("src/main/resources/${project.mod_id}.accesswidener")

    forge {
        convertAccessWideners = true
        extraAccessWideners.add loom.accessWidenerPath.get().asFile.name

        mixinConfigs = [
                "${project.mod_id}.mixins.json"
        ]
    }
}

repositories {
    mavenLocal()
//    maven {
//        // location of the maven that hosts JEI files since January 2023
//        name = "Jared's maven"
//        url = "https://maven.blamejared.com/"
//    }
//    maven {
//        // location of a maven mirror for JEI files, as a fallback
//        name = "ModMaven"
//        url = "https://modmaven.dev"
//    }
    maven {
        name = 'ParchmentMC'
        url = 'https://maven.parchmentmc.org'
    }
}

configurations {
    shadowCommon // Don't use shadow from the shadow plugin because we don't want IDEA to index this.
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings loom.layered() {
        officialMojangMappings()
        parchment("org.parchmentmc.data:parchment-${project.minecraft_version}:${project.parchment_version}@zip")
    }

    forge "net.minecraftforge:forge:${rootProject.minecraft_version}-${rootProject.forge_version}"

    shadowCommon(implementation("javazoom:jlayer:1.0.1"))
    forgeRuntimeLibrary("javazoom:jlayer:1.0.1")
}

processResources {
    inputs.property "mod_id", project.mod_id
    inputs.property "mod_version", project.mod_version
    inputs.property "mod_name", project.mod_name
    inputs.property "mod_description", project.mod_description
    inputs.property "archives_base_name", project.archives_base_name

    inputs.property "minecraft_version", project.minecraft_version
    inputs.property "forge_loader_version", project.forge_loader_version
    inputs.property "forge_version", project.forge_version

    filesMatching(["META-INF/mods.toml", "pack.mcmeta"]) {
        expand "mod_id": project.mod_id,
                "mod_version": project.mod_version,
                "mod_name": project.mod_name,
                "mod_description": project.mod_description,
                "minecraft_version": project.minecraft_version,
                "archives_base_name": project.archives_base_name,
                "forge_loader_version": project.forge_loader_version,
                "forge_version": project.forge_version
    }
}

shadowJar {
    configurations = [project.configurations.shadowCommon]
    relocate "javazoom", "gg.moonflower.etched.javazoom"
    archiveClassifier = "dev-shadow"
}

remapJar {
    inputFile.set shadowJar.archiveFile
    dependsOn shadowJar
    archiveClassifier = null
}

jar {
    archiveClassifier = "dev"
}

components.java {
    withVariantsFromConfiguration(project.configurations.shadowRuntimeElements) {
        skip()
    }
}